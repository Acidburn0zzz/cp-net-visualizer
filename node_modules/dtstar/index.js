//Copyright (C) 2016 Aidan Shafran
//
//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in
//all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//THE SOFTWARE.

// JS wrapper for dtstar

'use strict';
var fs = require('fs')
var proc = require('child_process')

module.exports = function () {
};

module.exports.generateProof = function (queryXML, cpnetXML, callback) {
  var id = (new Date()).getTime().toString().slice(-6);
  if(typeof(callback) !== 'function') { callback = function(x) { } }
  
  // Formatting
  queryXML = queryXML.replace(/<\? xml .*\?>/, '');
  cpnetXML = cpnetXML.replace(/<\? xml .*\?>/, '');
  queryXML = queryXML.replace("%PREF_SPEC_NAME%", "tmp_" + id + "_cpnet.xml");
  
  // Write XML files to tmp
  fs.writeFile(__dirname + "/tmp_" + id + "_query.xml", queryXML);
  fs.writeFile(__dirname + "/tmp_" + id + "_cpnet.xml", cpnetXML);
  
  proc.exec(execPath() + " -x", function(err, stdout, stderr) { // -x tells dtstar to export an XML file
    if(err)
    {
      callback(null);
    }
    else
    {
      fs.readFile(__dirname + "/tmp_" + id + "_query_proof.xml", 'utf8', function(ferr, data) {
        if(ferr)
          callback(null);
        else
          callback(data);
      });
      
      try { fs.unlink(__dirname + "/tmp_" + id + "_query_proof.xml"); } catch(e) { }
    }
  });
  
  // Erase tmp files
  try { fs.unlink(__dirname + "/tmp_" + id + "_query.xml"); } catch(e) { }
  try { fs.unlink(__dirname + "/tmp_" + id + "_cpnet.xml"); } catch(e) { }
};

module.exports.version = function() {
  try {
    var verstring = proc.execSync(execPath() + " --version").toString();
  } catch(e) {
    return null;
  }
  var match = verstring.match("DT\\* Solver ([0-9]*.[0-9]*)");
  
  if(match.length < 1)
    return null;
  return match[1];
}

function execPath()
{
  const EXEC_NAME = "dtstar";
  return "\"" + __dirname + "/" + EXEC_NAME + "\"";
}